spring:
  application:
    name: OrderApi
  h2:
    console:
      enabled: true
  datasource:
    url: jdbc:postgresql://postgres:5432/orderApiDB
    username: user
    password: password

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    database-platform: org.hibernate.dialect.H2Dialect
  kafka:
    producer:
      bootstrap-server: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      bootstrap-server: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      valur-deserializer: org.apache.kafka.common.serialization.StringDeserializer

orderSystem:
  payment:
    consumer:
      topics: "order-payment-topic"
      groupId: "order-payment-group"
      concurrency: 3
      containerGroup: "order-payment-container-group"
paymentSystem:
  kafka:
    producer:
      topic: "payment-topic"
